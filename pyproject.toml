[project]
name = "wikiapp"
version = "0.1.0"
description = "Add a short description here"
authors = [{name = "Woo Jin Lee", email = "163913803+woojin-lee713@users.noreply.github.com"}]
requires-python = ">= 3.10"
dependencies = []

[project.scripts]
wikiapp = "wikiapp.console:main"

[project.optional-dependencies]
test = ["coverage[toml]"]

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["osx-arm64", "linux-64", "win-64", "osx-64"]

[tool.pixi.pypi-dependencies]
wikiapp = { path = ".", editable = true }

[tool.pixi.tasks]
program = "python wikiapp/console.py"

[tool.pixi.dependencies]
click = ">=8.1.7,<8.2"
requests = ">=2.31.0,<2.32"
pydantic = ">=2.7.2,<2.8"

[tool.pixi.feature.test.dependencies]
pytest = ">=7.2.0,<8.3"
pytest-cov = ">=5.0.0,<5.1"
pytest-mock = ">=3.14.0,<3.15"

[tool.pixi.feature.test.tasks]
test = "pytest --cov -m 'not e2e'"
test_e2e = "pytest --cov -m 'e2e'"

[tool.pixi.feature.py310.dependencies]
requests = ">=2.23.0,<2.33"
python = "3.10.*"
click = ">=8.1.3,<8.2"

[tool.pixi.feature.py311.dependencies]
python = "3.11.*"
click = ">=8.1.3,<8.2"
requests = ">=2.23.0,<2.33"

#pixi add ruff --feature lintformat
[tool.pixi.feature.lintformat.dependencies]
ruff = ">=0.4.5,<0.5"
pre-commit = ">=3.7.1,<3.8"

[tool.pixi.feature.lintformat.tasks]
lint = "ruff check"
format = "ruff format"

[tool.pixi.feature.typing.dependencies]
mypy = ">=0.812,<1.11"

[tool.pixi.feature.typing.tasks]
typing = "mypy ."

[tool.pixi.environments]
default = {solve-group = "default"}
test = {features = ["test"], solve-group = "default"}
dev = {features = ["test", "lintformat", "typing"], solve-group = "default"}
py310test = {features = ["test", "py310"], solve-group = "py310"}
py311test = {features = ["test", "py311"], solve-group = "py311"}

[tool.pyright]
venvPath = "."
venv = ".pixi/envs/dev"

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    "W",
    # pyflakes
    "F",
    # McCabe
    "C",
    # Bugbear
    "B",
    # isort
    "I",
    # bandit
    "S",
    # mypy
    "ANN",
]
ignore = [
    # bandit
    "S101", #ignore aserts (don't warn on asserts)
    "E203", #don't complain about white space before the colon
    "ANN401",
]
mccabe.max-complexity = 10

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true
ignore-fully-untyped = true

[tool.mypy]
warn_return_any = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = ["requests", "pytest"]
ignore_missing_imports = true
